/// <summary>
/// Razor view for displaying a paginated table of food information.
/// </summary>
/// <remarks>
/// This view provides a structured table to display food-related data, allowing users to view details such as Food ID, Data Type, Description, and Category.
/// It includes a dynamic "Load More" functionality to fetch additional data as needed.
/// </remarks>
///
/// <dependencies>
/// - Layout: The view uses a shared layout located at "~/Views/Shared/_Layout.cshtml".
/// - CSS Framework: The view is styled with Bootstrap 5.3, loaded from a CDN.
/// - JavaScript: Dynamic functionality for fetching and populating table data is implemented using the script "~/js/tabels/fetchFoodData.js".
/// </dependencies>
///
/// <example>
/// Use this view to present food-related data in an organized table:
/// - Initially, the table is populated dynamically through the JavaScript file.
/// - The "Load More" button allows users to fetch additional data, enhancing user interaction.
/// - Example: Displaying information like Food ID, Data Type, and Category for each food item.
/// </example>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "FoodPage";
}
   

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .table-container {
            margin: 20px auto;
            max-width: 1200px;
        }
        .loading {
            text-align: center;
            margin-top: 20px;
            font-size: 1.5rem;
            color: #6c757d;
        }
    </style>

    <div class="table-container">
        <h1 class="text-center mb-4">Food Information</h1>
        <table class="table table-striped table-bordered">
            <thead class="table-dark">
                <tr>
                    <th>Food ID</th>
                    <th>Data Type</th>
                    <th>Description</th>
                    <th>Publication Date</th>
                    <th>Category</th>
                    <th>Category Code</th>
                </tr>
            </thead>
            <tbody id="foodTableBody">
                <!-- Rows will be populated here dynamically -->
            </tbody>
        </table>
        <div id="loadingMessage" class="loading">Loading data...</div>
        <button id="loadMoreButton" class="btn btn-primary mx-auto d-block">Load More</button>
    </div>
    
@section Scripts {
    <script src="~/js/tabels/fetchFoodData.js"></script>
}
