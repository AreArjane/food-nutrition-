// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FoodRegisterationToolSub1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241107165957_new_table")]
    partial class new_table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FoodRegisterationToolSub1.Models.datasets.FoodCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("FoodCategories");
                });

            modelBuilder.Entity("FoodRegisterationToolSub1.Models.meals.Meal", b =>
                {
                    b.Property<int>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("meal_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MealId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("MealId");

                    b.ToTable("Meal");
                });

            modelBuilder.Entity("FoodRegisterationToolSub1.Models.meals.MealFood", b =>
                {
                    b.Property<int>("MealFoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("meal_food_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MealFoodId"));

                    b.Property<int>("FoodId")
                        .HasColumnType("integer")
                        .HasColumnName("food_id");

                    b.Property<int?>("MealId")
                        .HasColumnType("integer");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision")
                        .HasColumnName("quantity");

                    b.HasKey("MealFoodId");

                    b.HasIndex("FoodId");

                    b.HasIndex("MealId");

                    b.ToTable("MealFood");
                });

            modelBuilder.Entity("FoodRegisterationToolSub1.Models.permissions.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PermissionId"));

                    b.Property<int?>("AdminUserUserId")
                        .HasColumnType("integer");

                    b.Property<int?>("NormalUserUserId")
                        .HasColumnType("integer");

                    b.Property<int>("PermissionType")
                        .HasColumnType("integer");

                    b.Property<int?>("SuperUserUserId")
                        .HasColumnType("integer");

                    b.HasKey("PermissionId");

                    b.HasIndex("AdminUserUserId");

                    b.HasIndex("NormalUserUserId");

                    b.HasIndex("SuperUserUserId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("FoodRegisterationToolSub1.Models.users.User.AdminUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("NationalIdenityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("OfficeAddress")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("PhoneNr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkPhoneNr")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("AdminUser");
                });

            modelBuilder.Entity("FoodRegisterationToolSub1.Models.users.User.NormalUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("HomeAddress")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("PhoneNr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.HasKey("UserId");

                    b.ToTable("NormalUsers");
                });

            modelBuilder.Entity("FoodRegisterationToolSub1.Models.users.User.SuperUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("PhoneNr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("SuperUser");
                });

            modelBuilder.Entity("FoodRegistrationToolSub1.Models.datasets.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("fdc_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FoodId"));

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("data_type");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<int?>("FoodCategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("food_category_id");

                    b.Property<string>("PublicationDate")
                        .HasColumnType("text")
                        .HasColumnName("publication_date");

                    b.HasKey("FoodId");

                    b.HasIndex("FoodCategoryId");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("FoodRegistrationToolSub1.Models.datasets.FoodNutrient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DataPoint")
                        .HasColumnType("text")
                        .HasColumnName("data_points");

                    b.Property<string>("DerivationId")
                        .HasColumnType("text")
                        .HasColumnName("derivation_id");

                    b.Property<int>("FdcId")
                        .HasColumnType("integer")
                        .HasColumnName("fdc_id");

                    b.Property<string>("Footnote")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("footnote");

                    b.Property<float?>("Max")
                        .HasColumnType("real")
                        .HasColumnName("max");

                    b.Property<float?>("Median")
                        .HasColumnType("real")
                        .HasColumnName("median");

                    b.Property<float?>("Min")
                        .HasColumnType("real")
                        .HasColumnName("min");

                    b.Property<string>("MinYearAcquired")
                        .HasColumnType("text")
                        .HasColumnName("min_year_acquired");

                    b.Property<int>("NutrientId")
                        .HasColumnType("integer")
                        .HasColumnName("ntrient_id");

                    b.HasKey("Id");

                    b.HasIndex("FdcId");

                    b.HasIndex("NutrientId");

                    b.ToTable("FoodNutrient");
                });

            modelBuilder.Entity("FoodRegistrationToolSub1.Models.datasets.Nutrient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("NutrientNbr")
                        .HasColumnType("text")
                        .HasColumnName("nutrient_nbr");

                    b.Property<string>("Rank")
                        .HasColumnType("text")
                        .HasColumnName("rank");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("unit_name");

                    b.HasKey("Id");

                    b.ToTable("Nutrient");
                });

            modelBuilder.Entity("FoodRegisterationToolSub1.Models.meals.MealFood", b =>
                {
                    b.HasOne("FoodRegistrationToolSub1.Models.datasets.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodRegisterationToolSub1.Models.meals.Meal", null)
                        .WithMany("MealFoods")
                        .HasForeignKey("MealId");

                    b.Navigation("Food");
                });

            modelBuilder.Entity("FoodRegisterationToolSub1.Models.permissions.Permission", b =>
                {
                    b.HasOne("FoodRegisterationToolSub1.Models.users.User.AdminUser", null)
                        .WithMany("Permissions")
                        .HasForeignKey("AdminUserUserId");

                    b.HasOne("FoodRegisterationToolSub1.Models.users.User.NormalUser", null)
                        .WithMany("Permissions")
                        .HasForeignKey("NormalUserUserId");

                    b.HasOne("FoodRegisterationToolSub1.Models.users.User.SuperUser", null)
                        .WithMany("Permissions")
                        .HasForeignKey("SuperUserUserId");
                });

            modelBuilder.Entity("FoodRegistrationToolSub1.Models.datasets.Food", b =>
                {
                    b.HasOne("FoodRegisterationToolSub1.Models.datasets.FoodCategory", "FoodCategory")
                        .WithMany("Foods")
                        .HasForeignKey("FoodCategoryId");

                    b.Navigation("FoodCategory");
                });

            modelBuilder.Entity("FoodRegistrationToolSub1.Models.datasets.FoodNutrient", b =>
                {
                    b.HasOne("FoodRegistrationToolSub1.Models.datasets.Food", "Food")
                        .WithMany("FoodNutrients")
                        .HasForeignKey("FdcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodRegistrationToolSub1.Models.datasets.Nutrient", "Nutrient")
                        .WithMany("FoodNutrients")
                        .HasForeignKey("NutrientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Nutrient");
                });

            modelBuilder.Entity("FoodRegisterationToolSub1.Models.datasets.FoodCategory", b =>
                {
                    b.Navigation("Foods");
                });

            modelBuilder.Entity("FoodRegisterationToolSub1.Models.meals.Meal", b =>
                {
                    b.Navigation("MealFoods");
                });

            modelBuilder.Entity("FoodRegisterationToolSub1.Models.users.User.AdminUser", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("FoodRegisterationToolSub1.Models.users.User.NormalUser", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("FoodRegisterationToolSub1.Models.users.User.SuperUser", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("FoodRegistrationToolSub1.Models.datasets.Food", b =>
                {
                    b.Navigation("FoodNutrients");
                });

            modelBuilder.Entity("FoodRegistrationToolSub1.Models.datasets.Nutrient", b =>
                {
                    b.Navigation("FoodNutrients");
                });
#pragma warning restore 612, 618
        }
    }
}
